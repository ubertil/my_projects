# uncompyle6 version 2.9.10
# Python bytecode 3.6 (3379)
# Decompiled from: Python 2.7.13 (default, Feb  8 2017, 16:49:57) 
# [GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)]
# Embedded file name: challenge.py
# Compiled at: 2017-04-23 17:29:28
# Size of source mod 2**32: 1970 bytes
import hashlib
import string
flag = [
 422690513718208603197180485123089552228212076789L,
 44317394920663470439599331002781311566411591751L,
 770532928004321317276586199312531973061171636152L,
 485199322695171912133109002771794018221227648027L,
 552217601566544758515102297425320266994028244549L,
 1020655000011145935027846360132060520818390113750L,
 1196151750138713746139996239500033013601661140394L,
 462998648640265045181969745252763834104103361977L,
 855167720509758161019464696519599315897915381578L,
 285659669047782539467159484289884211950993880445L,
 477429421877806872374252174118914073580937340807L,
 1316616562982664008692722964252005506488452748146L,
 1041012704324150835652886655287508314496841564428L,
 444047727613521616138730246713219103138518320311L,
 477429421877806872374252174118914073580937340807L,
 1111942805099579814361048156301598870198262692071L,
 227406986840443696682887170902576407689807301237L,
 684329801336223661356952546078269889038938702779L,
 477429421877806872374252174118914073580937340807L,
 1291689539573382792298694352494321825326952217750L,
 304942582444936629325699363757435820077590259883L,
 1196151750138713746139996239500033013601661140394L,
 61197560555531355947708244605936746875879897405L,
 61197560555531355947708244605936746875879897405L,
 1111644705301237875501860922880686912352243702634L]

def generate_numeric_hash(char):
    m = hashlib.sha1()
    m.update(char.encode('utf-8'))
    return int(m.hexdigest(), 16)


def main():
    inp = str(raw_input('[+] Wat is the flag man ? '))
    password = ""
    i = 0
    while (i < len(flag)) :
        for ascii in string.printable :
            if (generate_numeric_hash(ascii) == flag[i]) :
                password += ascii
        i += 1
    print("Found password : " + password)
    for i, c in enumerate(inp):
        if generate_numeric_hash(str(c)) != flag[i]:
            print('[-] NOP!')
            return
    print('[+] You Fucking win man ! The flag is :')
    print(password)


if __name__ == '__main__':
    main()